<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>